---
title: "Take-home Exercise 1: Understanding and Analysing Thailand Road Accident Data"
title-block-banner: true
date: "05-Sep-23"
date-modified: "last-modified"
toc: true
toc-depth: 4
editor: visual
execute: 
  freeze: true #never re-render during project render
  echo: true #if false, displays charts without codes
  eval: true #if false, displays codes without charts
  warning: false #dont display if there are any warnings
format: 
  html:
    code-fold: false
    code-overflow: scroll
    code-summary: "Show the code"
    code-line-numbers: false
---

# 1 Thailand's Killer Roads

Road traffic injuries pose a significant public health issue in Thailand, with a high number of fatalities, injuries, and disabilities each year. These incidents have a profound impact not only on the victims and their families but also on society and the nation as a whole. According to the World Health Organization (WHO), approximately 20,000 people lose their lives in road accidents annually, equating to about 56 deaths each day.

Despite numerous government initiatives to reduce road casualties, the situation has seen minimal improvement. These issues underscore the need for a deeper understanding of road traffic accidents, which can be largely attributed to two primary factors: behavioral and environmental.

Behavioral factors, such as driver behavior and performance, are significant contributors to traffic accidents. These factors include driving style and skills, as well as direct and indirect driving behaviors. Environmental factors encompass conditions such as poor visibility during adverse weather (e.g., heavy rain or fog) and challenging road features (e.g., sharp bends, slippery slopes, and blind spots).

Previous studies have highlighted the value of Spatial Point Patterns Analysis in examining road traffic accidents. However, these studies often focus solely on either behavioral or environmental factors, neglecting the influence of temporal factors such as season, day of the week, or time of day.

In light of this, it is essential to investigate the factors affecting road traffic accidents in the Bangkok Metropolitan Region (BMR) using both spatial and spatio-temporal point patterns analysis methods. This approach aims to identify the leading causes of accidents and provide insights that can guide the development of effective policies and interventions to enhance road safety.

# 2 Getting Started

## 2.1 Loading Packages

In this exercise, we will be using the following packages:

+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+
| Package                                                                                                                                          | Description                                           |
+==================================================================================================================================================+=======================================================+
| [**sf**](https://r-spatial.github.io/sf/)                                                                                                        | For importing, managing, and handling geospatial data |
+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+
| [**sfdep**](https://sfdep.josiahparry.com/)                                                                                                      | Used to compute spatial weights                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+
| [**tmap**](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html)                                                          | For thematic mapping                                  |
+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+
| [**leaflet**](https://rstudio.github.io/leaflet/)                                                                                                | For interactive maps                                  |
+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+
| [**tidyverse**](https://www.tidyverse.org/)                                                                                                      | For non-spatial data wrangling                        |
+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+
| [**DT**](https://rstudio.github.io/DT/)**, [knitr](https://yihui.org/knitr/), [kableExtra](https://haozhu233.github.io/kableExtra/)**, gtsummary | For building tables                                   |
+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+
| [**plotly**](https://github.com/plotly/plotly.py)                                                                                                | To create interactive plots                           |
+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+
|                                                                                                                                                  |                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------+

: {tbl-colwidths="\[20,80\]"}

The following code chunk uses `p_load()` of **pacman** package to check if the aforementioned packages are installed in the computer. If they are, the libraries will be called into R.

```{r}
pacman::p_load(sf, sfdep,
               tmap, leaflet,
               tidyverse,
               DT, knitr, kableExtra, gtsummary,
               plotly)
```

## 2.2 The Data

+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------+----------------------------------+
| File                                                                                                                                                                                            | Source                     | Screenshot                       |
+=================================================================================================================================================================================================+============================+==================================+
| [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/geoboundaries-admin-boundaries-for-thailand), *in SHP file format*                                          | Humanitarian Data Exchange | ![](images/adminboundaries.PNG)  |
|                                                                                                                                                                                                 |                            |                                  |
|                                                                                                                                                                                                 |                            | ![](images/adminboundaries2.PNG) |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------+----------------------------------+
| [Thailand Roads (OpenStreetMap Export)](https://data.humdata.org/dataset/hotosm_tha_roads), *in SHP file format*                                                                                | Humanitarian Data Exchange | ![](images/roads.PNG)            |
|                                                                                                                                                                                                 |                            |                                  |
|                                                                                                                                                                                                 |                            | ![](images/roads2.PNG)           |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------+----------------------------------+
| [Thailand Road Accident \[2019-2022\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022), *in CSV format*                                                          | Kaggle                     | ![](images/roadacc.PNG)          |
|                                                                                                                                                                                                 |                            |                                  |
| This dataset provides a comprehensive statistics on recorded road accidents in Thailand from 2019 to 2022, including time location, accident type, weather condition, and road characteristics. |                            |                                  |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------+----------------------------------+

: {tbl-colwidths="\[25,10,65\]"}

### 2.2.1 Traffic Accident Data

`read_csv()` of the **readr** package allows us to import csv files into R Studio.

```{r}
accidents <- read_csv("data/geospatial/thai_road_accident_2019_2022.csv")
```

```{r}
glimpse(accidents)
```

A quick look into the data using `glimpse()` of the **dplyr** package reveals that there are 18 variables in the data, including:

+-------------------------------+--------------------------------------------------------------------------------+
| Column Name                   | Description                                                                    |
+===============================+================================================================================+
| *acc_code*                    | The accident code or identifier.                                               |
+-------------------------------+--------------------------------------------------------------------------------+
| *incident_datetime*           | The date and time of the accident occurrence.                                  |
+-------------------------------+--------------------------------------------------------------------------------+
| *report_datetime*             | The date and time when the accident was reported.                              |
+-------------------------------+--------------------------------------------------------------------------------+
| *province_th*                 | The name of the province in Thailand, written in Thai.                         |
+-------------------------------+--------------------------------------------------------------------------------+
| *province_en*                 | The name of the province in Thailand, written in English.                      |
+-------------------------------+--------------------------------------------------------------------------------+
| *agency*                      | The government agency responsible for the road and traffic management.         |
+-------------------------------+--------------------------------------------------------------------------------+
| *route*                       | The route or road segment where the accident occurred.                         |
+-------------------------------+--------------------------------------------------------------------------------+
| *vehicle_type*                | The type of vehicle involved in the accident.                                  |
+-------------------------------+--------------------------------------------------------------------------------+
| *presumed_cause*              | The presumed cause or reason for the accident.                                 |
+-------------------------------+--------------------------------------------------------------------------------+
| *accident_type*               | The type of nature of the accident.                                            |
+-------------------------------+--------------------------------------------------------------------------------+
| *number_of_vehicles_involved* | The number of vehicles involved in the accident.                               |
+-------------------------------+--------------------------------------------------------------------------------+
| *number_of_fatalities*        | The number of fatalities resulting from the accident.                          |
+-------------------------------+--------------------------------------------------------------------------------+
| *number_of_injuries*          | The number of injuries resulting from the accident.                            |
+-------------------------------+--------------------------------------------------------------------------------+
| *weather_condition*           | The weather condition at the time of the accident.                             |
+-------------------------------+--------------------------------------------------------------------------------+
| *latitude*                    | The latitude coordinate of the accident location.                              |
+-------------------------------+--------------------------------------------------------------------------------+
| *longitude*                   | The longitude coordinate of the accident location.                             |
+-------------------------------+--------------------------------------------------------------------------------+
| *road_description*            | The description of the road type or configuration where the accident occurred. |
+-------------------------------+--------------------------------------------------------------------------------+
| *slope_description*           | The description of the slope condition at the accident location.               |
+-------------------------------+--------------------------------------------------------------------------------+

: {tbl-colwidths="\[30,70\]"}

Since the *province_th* and *route* columns are in Thai, I will remove them. The province column is already available in English, and the route information can be projected using the *latitude* and *longitude* columns. Additionally, I will remove the *report_datetime* column and use *incident_datetime* for our analysis.

```{r}
accidents <- accidents %>% 
  select(-c(province_th, 
            route, 
            report_datetime))
```

The **gtsummary** package provides us with descriptive statistics of the dataset and also includes the amount of missingness in each variable.

```{r}
#| echo: false
theme_gtsummary_compact()

accidents %>% 
  tbl_summary(missing_text = "NA") %>% 
  add_n() %>% 
  modify_caption("**Table of Variable Summary**") %>%
  bold_labels()
```

::: {.lightbox .light data-latex="light"}
**Observations**

-   In terms of data health, we can see that there are 359 missing records in the *latitude* and *longitude* columns. Since these missing records make up \<5% of the 81,735 total road accidents recorded, we can remove these from our data set.
-   We can use *latitude* and *longitude* columns to convert the data into a sf object and transform the coordinates into CRS. The EPSG code for latitude-longitude projection is [4326](https://epsg.io/4326).
-   Thailand adopts EPSG [32647](https://epsg.io/32647), which is in metres.

-   Since the Bangkok Metropolitan Region is made up of [6 provinces](https://en.wikipedia.org/wiki/Bangkok_Metropolitan_Region) -- Bangkok, Nonthaburi, Nakhon Pathom, Pathum Thani, Samut Prakan, and Samut Sakhon, we can use the *province_en* column to filter for these provinces.

-   Using the *incident_datetime* column, we can also derive additional columns such as seasons, month, day of the week, time of the day (e.g. morning or evening peak periods). The morning rush hour is said to last from 6am to 9am and evening rush hour is reported to be from 4pm to 7pm [(The Nation)](https://www.nationthailand.com/in-focus/30352400).

-   I also think it would be interesting to derive a column that indicates accidents that happened during the Songkran festival holiday. Notoriously dubbed as the [Seven Deadly Days of Songkran](https://www.nst.com.my/world/world/2023/04/901026/more-250-killed-road-accidents-during-songkran-holiday), road accidents in Bangkok is said to surge due increased traffic from people traveling to celebrate with family.

:::

The code chunk performs several functions for preparing and transforming the dataset:

1.    The `filter()` function from the **dplyr** package is used to remove rows with missing or empty *longitude* and *latitude* values, ensuring that the dataset contains only valid spatial data.
2.    The `filter()` function is also employed to retain data exclusively from the Bangkok Metropolitan Region (BMR) by filtering for specific provinces.
3.    The **sf** package’s `st_as_sf()` function converts the data frame into a spatial object (simple feature) using the *longitude* and *latitude* columns, setting the coordinate reference system (CRS) to EPSG 4326.
4.    Using `st_transform()` from the **sf** package, the spatial data is reprojected to EPSG 32647, a local projection commonly used in Thailand.
5.    The **lubridate** package within **tidyverse** is utilised to extract temporal components (month, day of the week, and hour) from the *incident_datetime* column using the `month()`, `wday()`, and `hour()` functions, respectively.
6.    The *songkran* indicator is created using `ifelse()`, along with `as_date()` and `year()`, to generate a binary variable (1 for "Yes", 0 for "No") indicating whether the accident occurred during the Songkran festival (April 9 to April 16) in the years 2019, 2020, 2021, or 2022.
7.    Two additional indicators are derived using `ifelse()`:
      -   *season* variable: classifies accidents into seasons ("Summer", "Rainy", or "Winter") based on the month.
      -   *peakperiod* variable: identifies whether the accident occurred during morning peak hours (7-9 AM), evening peak hours (5-7 PM), or non-peak times.
8.    Finally, `select()` from dplyr is used to remove the *incident_datetime* column, as the necessary time-based variables have been derived from it.

```{r}
accidents_bmr <- accidents %>% 
  
  # Removes rows with missing longitude and latitude values
  filter(!is.na(longitude) & longitude != "",
         !is.na(latitude) & latitude !="") %>% 
  
  # Converts data to an sf object using longitude and latitude 
  st_as_sf(coords = c("longitude", "latitude"),
           crs = 4326) %>%
  
  # Transforms to the projection used in Thailand
  st_transform(crs = 32647) %>% 
  
  # Filter for BMR data
  filter(province_en %in% c("Bangkok", "Nonthaburi", "Nakhon Pathom", "Pathum Thani", "Samut Prakan", "Samut Sakhon")) %>% 
  
  # Derive month, days, hour columns as well as a Songkran indicator
  mutate(
    month = month(incident_datetime,
                  label = TRUE),
    day = wday(incident_datetime, 
                    label = TRUE),
    hour = hour(incident_datetime),
    songkran = ifelse(
      as_date(incident_datetime) >= as_date(paste0(year(incident_datetime), "-04-09")) &
        as_date(incident_datetime) <= as_date(paste0(year(incident_datetime), "-04-16")) &
        year(incident_datetime) %in% c(2019, 2020, 2021, 2022),
      1,
      0)) %>% 
  
  # Derive season column and peak period indicator
  mutate(
    season = ifelse(
      month %in% c("Feb", "Mar", "Apr", "May"),
      "Summer",
      ifelse(
        month %in% c("Jun", "Jul", "Aug", "Sep", "Oct"),
        "Rainy",
        "Winter"
        )
      ),
    peakperiod = ifelse(
      hour > 6 & hour < 9,
      "morningpeak",
      ifelse(
        hour > 16 & hour < 19,
        "eveningpeak",
        "non-peak"
      )
    )
    ) %>% 
  
  # Drop incident datetime column
  select(-incident_datetime)

```

Another check of the data types and for duplicated records before we move on. The code chunk below identifies all rows in the *accidents_bmr* dataframe that have an exact duplicate (i.e., another row with the same values in all columns) using `group_by_all()`.

```{r}
glimpse(accidents_bmr)
```

```{r}
duplicate <- accidents_bmr %>% 
  group_by_all() %>% 
  filter(n()>1) %>% 
  ungroup()
  
duplicate
```

Results confirm that there are no duplicated records found.

### 2.2.2 Administrative Boundary

The *adminboundary* dataset, which we downloaded from HDX, is in ESRI shapefile format. To use this data in an R-environment, we need to import it as an sf object. We can do this using the `st_read()` function of the **sf** package. This function reads the shapefile data and returns an sf object that can be used for further analysis.

In the code chunk below, we use `%>%` operator is used to pipe the output of `st_read()` to the `st_transform()` function. Since the dataset we are using is the Thailand boundary, we need to assign the standard coordinate reference system for Thailand, which is EPSG 32647. `st_transform()` function transforms the coordinate reference system of the sf object to 32647.

```{r}
adminboundary <- st_read(dsn = "data/geospatial", 
                layer = "geoBoundaries-THA-ADM0") %>% 
  st_transform(crs = 32647)
```

```{r}
st_crs(adminboundary)
```

After importing the dataset, we will plot it to see how it looks. The `plot()` function is used to plot the geometry of the sf object. The `st_geometry()` function is used to extract the geometry of the *adminboundary* object.

```{r}
par(bg = '#E4D5C9')

par(mar = c(0,0,0,0))
plot(st_geometry(adminboundary))
```


### 2.2.3 Road Lines

```{r}
roads <- st_read(dsn = "data/geospatial", 
                layer = "hotosm_tha_roads_lines_shp")
```

```{r}
st_crs(roads)
```
:::
